{"version":3,"sources":["app/scripts/bundles/index.bundle.js","app/scripts/lib/scrolltoanchor.js","app/scripts/blocks.default/nav-menu.js","app/scripts/blocks.default/icons.js","app/scripts/blocks.default/tile.js","node_modules/auto-reload-brunch/vendor/auto-reload.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAdA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAdA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhEA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApCA;AAAA;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"public/scripts/index.js","sourcesContent":["document.addEventListener('DOMContentLoaded', function() {\n  console.log('everything OK');\n\n  var ScrollToAnchor  = require('../lib/scrolltoanchor');\n  var NavMenuActions  = require('../blocks.default/nav-menu');\n  var IconsRecolor    = require('../blocks.default/icons');\n  var TileOnClick     = require('../blocks.default/tile');\n\n  ScrollToAnchor('800');\n  NavMenuActions();\n  IconsRecolor();\n  TileOnClick();\n  \n});\n","module.exports = function ScrollToAnchor(speed) {\n  $('a[href*=\"#\"]').on(\"click\", function(event){\n    var anchor = $(this).attr('href').substring(1);\n    console.log(anchor);\n    try {\n      $('html, body').stop().animate({\n        scrollTop: $('a[name*='+anchor+']').offset().top\n    }, speed);\n    event.preventDefault();\n    } catch (error) {\n      console.log('Anchor missing: ' + error.message);\n    }\n  });\n};\n","module.exports = function NavMenuActions() {\n  $('.nav-menu__menu-button').click(function() {\n    $(this).toggleClass('nav-menu__menu-button_open');\n    $('.vertical-menu').toggleClass('vertical-menu__showed');\n  });\n  $(window).resize(function() {\n    $('.vertical-menu').removeClass('vertical-menu__showed');\n    $('.nav-menu__menu-button').removeClass('nav-menu__menu-button_open');\n  });\n}\n","module.exports = function IconsRecolor() {\n\n  window.onload=function() {\n    \n    var iconscoll = $('.icons__svg');\n\n    for (var index = 0; index < iconscoll.length; index++) {\n      currentSvgRecolor(iconscoll[index], '#18bc9c');\n    }\n\n    function currentSvgRecolor(element, fill) {\n      var svgDoc = element.contentDocument;\n      fill = 'fill: ' + fill;\n\n      if ($('*',svgDoc).is('#path3398')) { \n        var svgDocItem = $('#path3400', svgDoc);\n        var svgDocItem2 = $(\"#path3398\", svgDoc);\n\n        svgDocItem.attr('style',  fill);\n        svgDocItem2.attr('style', fill);\n\n      } else if ($('*',svgDoc).is('#path3318')) {\n        var svgDocItem = $('#path3318', svgDoc);\n        var svgDocItem2 = $('#path3320', svgDoc);\n        var svgDocItem3 = $('#path3322', svgDoc);\n\n        svgDocItem.attr('style',  fill);\n        svgDocItem2.attr('style', fill);\n        svgDocItem3.attr('style', fill);\n\n      } else if ($('*',svgDoc).is('#path3176')) {\n        var svgDocItem = $('#path3176', svgDoc);\n        var svgDocItem2 = $('#path3178', svgDoc);\n\n        svgDocItem.attr('style',  fill);\n        svgDocItem2.attr('style', fill);\n      }\n    }\n\n    try {\n      $('.icons__link').mouseover(function() {\n        var currentsvg = $('.icons__svg', this);\n        console.log(currentsvg);\n        currentSvgRecolor(currentsvg, '#ffffff');\n      })\n      .mouseout(function() {\n        var currentsvg = $('.icons__svg', this);\n        console.log(currentsvg);\n        currentSvgRecolor(currentsvg, '#18bc9c');\n      });\n    } catch (error) { console.log('icons__svg not found')}\n    try {\n      //currentSvgRecolor(iconscoll, 1, '#18bc9c');\n    } catch (error) { console.log('icons__svg not found')}\n    try {\n      //currentSvgRecolor(iconscoll, 2, '#18bc9c');\n    } catch (error) { console.log('icons__svg not found')}\n    \n    \n    \n    \n\n  };\n};  \n","module.exports = function TileOnClick() {\n    \n  var tile = $('.tile');\n  var tilesc = $('.tile_switch-colors');\n  var tilescr = $('.tile_switch-colors-rev');\n\n  function ToggleDisplay(thistile) {\n    if ($('*', thistile).is('.mobile-toggle')) {\n      $('.mobile-toggle', thistile).toggleClass('mobile-show');\n      thistile.toggleClass('js_hidden-el');\n    };\n    return true;\n  };\n\n  try {\n    \n      $(tile).on( \"click\", function() {\n        if ($(window).width() <= 480) {\n          ToggleDisplay($(this));\n        }  \n      });\n      $(tilesc).on( \"click\", function() {\n        if ($(window).width() <= 480) {\n          ToggleDisplay($(this));\n        }  \n      });\n      $(tilescr).on( \"click\", function() {\n        if ($(window).width() <= 480) {\n          ToggleDisplay($(this));\n        }  \n      });\n  } catch (error) {\n    \n  }\n\n};\n","/* jshint ignore:start */\n(function() {\n  var WebSocket = window.WebSocket || window.MozWebSocket;\n  var br = window.brunch = (window.brunch || {});\n  var ar = br['auto-reload'] = (br['auto-reload'] || {});\n  if (!WebSocket || ar.disabled) return;\n  if (window._ar) return;\n  window._ar = true;\n\n  var cacheBuster = function(url){\n    var date = Math.round(Date.now() / 1000).toString();\n    url = url.replace(/(\\&|\\\\?)cacheBuster=\\d*/, '');\n    return url + (url.indexOf('?') >= 0 ? '&' : '?') +'cacheBuster=' + date;\n  };\n\n  var browser = navigator.userAgent.toLowerCase();\n  var forceRepaint = ar.forceRepaint || browser.indexOf('chrome') > -1;\n\n  var reloaders = {\n    page: function(){\n      window.location.reload(true);\n    },\n\n    stylesheet: function(){\n      [].slice\n        .call(document.querySelectorAll('link[rel=stylesheet]'))\n        .filter(function(link) {\n          var val = link.getAttribute('data-autoreload');\n          return link.href && val != 'false';\n        })\n        .forEach(function(link) {\n          link.href = cacheBuster(link.href);\n        });\n\n      // Hack to force page repaint after 25ms.\n      if (forceRepaint) setTimeout(function() { document.body.offsetHeight; }, 25);\n    },\n\n    javascript: function(){\n      var scripts = [].slice.call(document.querySelectorAll('script'));\n      var textScripts = scripts.map(function(script) { return script.text }).filter(function(text) { return text.length > 0 });\n      var srcScripts = scripts.filter(function(script) { return script.src });\n\n      var loaded = 0;\n      var all = srcScripts.length;\n      var onLoad = function() {\n        loaded = loaded + 1;\n        if (loaded === all) {\n          textScripts.forEach(function(script) { eval(script); });\n        }\n      }\n\n      srcScripts\n        .forEach(function(script) {\n          var src = script.src;\n          script.remove();\n          var newScript = document.createElement('script');\n          newScript.src = cacheBuster(src);\n          newScript.async = true;\n          newScript.onload = onLoad;\n          document.head.appendChild(newScript);\n        });\n    }\n  };\n  var port = ar.port || 9485;\n  var host = br.server || window.location.hostname || 'localhost';\n\n  var connect = function(){\n    var connection = new WebSocket('ws://' + host + ':' + port);\n    connection.onmessage = function(event){\n      if (ar.disabled) return;\n      var message = event.data;\n      var reloader = reloaders[message] || reloaders.page;\n      reloader();\n    };\n    connection.onerror = function(){\n      if (connection.readyState) connection.close();\n    };\n    connection.onclose = function(){\n      window.setTimeout(connect, 1000);\n    };\n  };\n  connect();\n})();\n/* jshint ignore:end */\n"]}